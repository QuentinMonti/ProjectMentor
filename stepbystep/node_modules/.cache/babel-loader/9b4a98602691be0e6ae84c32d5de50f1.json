{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Hetic/ProjectMentor/src/Contexts/ProfileContext.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nexport const ProfileContext = createContext();\n\nconst ProfileContextProvider = props => {\n  let [note, setNote] = useState(\"\");\n  let [firstName, setFirstName] = useState(\"\");\n  let [lastName, setLastName] = useState(\"\");\n  let [jobTitle, setJobTitle] = useState(\"\");\n  let [city, setCity] = useState(\"\");\n  let [competences, setCompetences] = useState([]);\n  let [parcours, setParcours] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [comment, setComment] = useState([]);\n  let [commentAuthor, setCommentAuthor] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/apip/posts/451\").then(response => response.json()).then(data => {\n      setNote(data.note);\n      setFirstName(data.firstName);\n      setLastName(data.lastName);\n      setJobTitle(data.jobTitle);\n      setCity(data.city);\n      setCompetences(data.competences);\n      setParcours(data.course);\n      setEmail(data.email);\n      setComment(comment = data.comments);\n      comment.map(({\n        firstName\n      }) => {\n        setCommentAuthor(commentAuthor => [...commentAuthor, firstName]);\n      });\n    });\n  }, []);\n  console.log(commentAuthor);\n  return /*#__PURE__*/React.createElement(ProfileContext.Provider, {\n    value: {\n      note,\n      firstName,\n      lastName,\n      jobTitle,\n      city,\n      competences,\n      parcours,\n      email,\n      commentAuthor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProfileContextProvider;","map":{"version":3,"sources":["/Users/admin/Documents/Hetic/ProjectMentor/src/Contexts/ProfileContext.js"],"names":["React","useState","createContext","useEffect","ProfileContext","ProfileContextProvider","props","note","setNote","firstName","setFirstName","lastName","setLastName","jobTitle","setJobTitle","city","setCity","competences","setCompetences","parcours","setParcours","email","setEmail","comment","setComment","commentAuthor","setCommentAuthor","fetch","then","response","json","data","course","comments","map","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,cAAc,GAAGF,aAAa,EAApC;;AAEP,MAAMG,sBAAsB,GAAIC,KAAD,IAAW;AACxC,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAhD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdvB,MAAAA,OAAO,CAACuB,IAAI,CAACxB,IAAN,CAAP;AACAG,MAAAA,YAAY,CAACqB,IAAI,CAACtB,SAAN,CAAZ;AACAG,MAAAA,WAAW,CAACmB,IAAI,CAACpB,QAAN,CAAX;AACAG,MAAAA,WAAW,CAACiB,IAAI,CAAClB,QAAN,CAAX;AACAG,MAAAA,OAAO,CAACe,IAAI,CAAChB,IAAN,CAAP;AACAG,MAAAA,cAAc,CAACa,IAAI,CAACd,WAAN,CAAd;AACAG,MAAAA,WAAW,CAACW,IAAI,CAACC,MAAN,CAAX;AACAV,MAAAA,QAAQ,CAACS,IAAI,CAACV,KAAN,CAAR;AACAG,MAAAA,UAAU,CAAED,OAAO,GAAGQ,IAAI,CAACE,QAAjB,CAAV;AACAV,MAAAA,OAAO,CAACW,GAAR,CAAY,CAAC;AAAEzB,QAAAA;AAAF,OAAD,KAAmB;AAC7BiB,QAAAA,gBAAgB,CAAED,aAAD,IAAmB,CAAC,GAAGA,aAAJ,EAAmBhB,SAAnB,CAApB,CAAhB;AACD,OAFD;AAGD,KAfH;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA0B,EAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLlB,MAAAA,IADK;AAELE,MAAAA,SAFK;AAGLE,MAAAA,QAHK;AAILE,MAAAA,QAJK;AAKLE,MAAAA,IALK;AAMLE,MAAAA,WANK;AAOLE,MAAAA,QAPK;AAQLE,MAAAA,KARK;AASLI,MAAAA;AATK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGnB,KAAK,CAAC+B,QAbT,CADF;AAiBD,CAhDD;;AAiDA,eAAehC,sBAAf","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nexport const ProfileContext = createContext();\n\nconst ProfileContextProvider = (props) => {\n  let [note, setNote] = useState(\"\");\n  let [firstName, setFirstName] = useState(\"\");\n  let [lastName, setLastName] = useState(\"\");\n  let [jobTitle, setJobTitle] = useState(\"\");\n  let [city, setCity] = useState(\"\");\n  let [competences, setCompetences] = useState([]);\n  let [parcours, setParcours] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [comment, setComment] = useState([]);\n  let [commentAuthor, setCommentAuthor] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/apip/posts/451\")\n      .then((response) => response.json())\n      .then((data) => {\n        setNote(data.note);\n        setFirstName(data.firstName);\n        setLastName(data.lastName);\n        setJobTitle(data.jobTitle);\n        setCity(data.city);\n        setCompetences(data.competences);\n        setParcours(data.course);\n        setEmail(data.email);\n        setComment((comment = data.comments));\n        comment.map(({ firstName }) => {\n          setCommentAuthor((commentAuthor) => [...commentAuthor, firstName]);\n        });\n      });\n  }, []);\n  console.log(commentAuthor);\n  return (\n    <ProfileContext.Provider\n      value={{\n        note,\n        firstName,\n        lastName,\n        jobTitle,\n        city,\n        competences,\n        parcours,\n        email,\n        commentAuthor,\n      }}\n    >\n      {props.children}\n    </ProfileContext.Provider>\n  );\n};\nexport default ProfileContextProvider;\n"]},"metadata":{},"sourceType":"module"}