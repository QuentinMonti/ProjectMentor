{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emile\\\\Documents\\\\Projet\\\\ProjectMentor\\\\stepbystep\\\\src\\\\contexts\\\\ProgressContext.js\";\nimport React, { createContext, useState } from \"react\";\nexport const ProgressContext = createContext();\n\nconst ProgressContextProvider = props => {\n  const [percentage, setPercentage] = useState(20);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [resume, setResume] = useState(\"\");\n  const [experience, setExperience] = useState(0);\n  const [mentoringType, setMentoringType] = useState(0);\n  const [meetingType, setMeetingType] = useState(0);\n  const [skills, setSkills] = useState([\"\"]);\n\n  const increasePercentage = () => {\n    if (percentage < 100) {\n      setPercentage(percentage + 10);\n    }\n  };\n\n  const decreasePercentage = () => {\n    if (percentage > 10) {\n      setPercentage(percentage - 10);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ProgressContext.Provider, {\n    value: {\n      percentage,\n      increasePercentage,\n      decreasePercentage,\n      firstName,\n      setFirstName,\n      lastName,\n      setLastName,\n      email,\n      setEmail,\n      job,\n      setJob,\n      city,\n      setCity,\n      resume,\n      setResume,\n      experience,\n      setExperience,\n      mentoringType,\n      setMentoringType,\n      meetingType,\n      setMeetingType,\n      skills,\n      setSkills\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProgressContextProvider;","map":{"version":3,"sources":["C:/Users/Emile/Documents/Projet/ProjectMentor/stepbystep/src/contexts/ProgressContext.js"],"names":["React","createContext","useState","ProgressContext","ProgressContextProvider","props","percentage","setPercentage","firstName","setFirstName","lastName","setLastName","email","setEmail","job","setJob","city","setCity","resume","setResume","experience","setExperience","mentoringType","setMentoringType","meetingType","setMeetingType","skills","setSkills","increasePercentage","decreasePercentage","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,eAAe,GAAGF,aAAa,EAArC;;AAEP,MAAMG,uBAAuB,GAAIC,KAAD,IAAW;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAApC;;AAEA,QAAM0B,kBAAkB,GAAG,MAAM;AAC/B,QAAItB,UAAU,GAAG,GAAjB,EAAsB;AACpBC,MAAAA,aAAa,CAACD,UAAU,GAAG,EAAd,CAAb;AACD;AACF,GAJD;;AAKA,QAAMuB,kBAAkB,GAAG,MAAM;AAC/B,QAAIvB,UAAU,GAAG,EAAjB,EAAqB;AACnBC,MAAAA,aAAa,CAACD,UAAU,GAAG,EAAd,CAAb;AACD;AACF,GAJD;;AAKA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,UADK;AAELsB,MAAAA,kBAFK;AAGLC,MAAAA,kBAHK;AAILrB,MAAAA,SAJK;AAKLC,MAAAA,YALK;AAMLC,MAAAA,QANK;AAOLC,MAAAA,WAPK;AAQLC,MAAAA,KARK;AASLC,MAAAA,QATK;AAULC,MAAAA,GAVK;AAWLC,MAAAA,MAXK;AAYLC,MAAAA,IAZK;AAaLC,MAAAA,OAbK;AAcLC,MAAAA,MAdK;AAeLC,MAAAA,SAfK;AAgBLC,MAAAA,UAhBK;AAiBLC,MAAAA,aAjBK;AAkBLC,MAAAA,aAlBK;AAmBLC,MAAAA,gBAnBK;AAoBLC,MAAAA,WApBK;AAqBLC,MAAAA,cArBK;AAsBLC,MAAAA,MAtBK;AAuBLC,MAAAA;AAvBK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA2BGtB,KAAK,CAACyB,QA3BT,CADF;AA+BD,CAtDD;;AAwDA,eAAe1B,uBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const ProgressContext = createContext();\r\n\r\nconst ProgressContextProvider = (props) => {\r\n  const [percentage, setPercentage] = useState(20);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [job, setJob] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [resume, setResume] = useState(\"\");\r\n  const [experience, setExperience] = useState(0);\r\n  const [mentoringType, setMentoringType] = useState(0);\r\n  const [meetingType, setMeetingType] = useState(0);\r\n  const [skills, setSkills] = useState([\"\"]);\r\n\r\n  const increasePercentage = () => {\r\n    if (percentage < 100) {\r\n      setPercentage(percentage + 10);\r\n    }\r\n  };\r\n  const decreasePercentage = () => {\r\n    if (percentage > 10) {\r\n      setPercentage(percentage - 10);\r\n    }\r\n  };\r\n  return (\r\n    <ProgressContext.Provider\r\n      value={{\r\n        percentage,\r\n        increasePercentage,\r\n        decreasePercentage,\r\n        firstName,\r\n        setFirstName,\r\n        lastName,\r\n        setLastName,\r\n        email,\r\n        setEmail,\r\n        job,\r\n        setJob,\r\n        city,\r\n        setCity,\r\n        resume,\r\n        setResume,\r\n        experience,\r\n        setExperience,\r\n        mentoringType,\r\n        setMentoringType,\r\n        meetingType,\r\n        setMeetingType,\r\n        skills,\r\n        setSkills,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProgressContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProgressContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}