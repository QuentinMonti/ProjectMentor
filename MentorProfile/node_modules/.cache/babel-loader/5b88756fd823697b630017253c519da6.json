{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emile\\\\Documents\\\\Projet\\\\ProjectMentor\\\\src\\\\contexts\\\\ProgressContext.js\";\nimport React, { createContext, useState } from \"react\";\nexport const ProgressContext = createContext();\n\nconst ProgressContextProvider = props => {\n  const [percentage, setPercentage] = useState(10);\n\n  const setJob = value => {\n    infos.jobTitle = value;\n  };\n\n  const increasePercentage = () => {\n    if (percentage < 100) {\n      setPercentage(percentage + 10);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ProgressContext.Provider, {\n    value: {\n      percentage,\n      increasePercentage,\n      infos,\n      setJob\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProgressContextProvider;","map":{"version":3,"sources":["C:/Users/Emile/Documents/Projet/ProjectMentor/src/contexts/ProgressContext.js"],"names":["React","createContext","useState","ProgressContext","ProgressContextProvider","props","percentage","setPercentage","setJob","value","infos","jobTitle","increasePercentage","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,eAAe,GAAGF,aAAa,EAArC;;AAEP,MAAMG,uBAAuB,GAAIC,KAAD,IAAW;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMM,MAAM,GAAIC,KAAD,IAAW;AACvBC,IAAAA,KAAK,CAACC,QAAN,GAAiBF,KAAlB;AACD,GAFD;;AAGA,QAAMG,kBAAkB,GAAG,MAAM;AAC/B,QAAIN,UAAU,GAAG,GAAjB,EAAsB;AACpBC,MAAAA,aAAa,CAACD,UAAU,GAAG,EAAd,CAAb;AACD;AACF,GAJD;;AAKA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAF;AAAcM,MAAAA,kBAAd;AAAkCF,MAAAA,KAAlC;AAAyCF,MAAAA;AAAzC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGH,KAAK,CAACQ,QAHT,CADF;AAOD,CAlBD;;AAoBA,eAAeT,uBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const ProgressContext = createContext();\r\n\r\nconst ProgressContextProvider = (props) => {\r\n  const [percentage, setPercentage] = useState(10);\r\n  \r\n  const setJob = (value) => {\r\n    (infos.jobTitle = value);\r\n  };\r\n  const increasePercentage = () => {\r\n    if (percentage < 100) {\r\n      setPercentage(percentage + 10);\r\n    }\r\n  };\r\n  return (\r\n    <ProgressContext.Provider\r\n      value={{ percentage, increasePercentage, infos, setJob }}\r\n    >\r\n      {props.children}\r\n    </ProgressContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProgressContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}