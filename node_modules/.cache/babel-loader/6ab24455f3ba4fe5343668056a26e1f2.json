{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Hetic/ProjectMentor/src/contexts/ProfileContext.js\";\nimport React, { useState, createContext, useEffect, useContext } from \"react\";\nimport { ProgressContext } from \"./ProgressContext.js\";\nexport const ProfileContext = createContext();\n\nconst ProfileContextProvider = props => {\n  const {\n    id\n  } = useContext(ProgressContext);\n  let [note, setNote] = useState(\"\");\n  let [meetingType, setMeetingType] = useState(\"\");\n  let [mentoringType, setMentoringType] = useState(\"\");\n  let [experience, setExperience] = useState(\"\");\n  let [firstName, setFirstName] = useState(\"\");\n  let [lastName, setLastName] = useState(\"\");\n  let [jobTitle, setJobTitle] = useState(\"\");\n  let [city, setCity] = useState(\"\");\n  let [competences, setCompetences] = useState([]);\n  let [parcours, setParcours] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [comment, setComment] = useState([]);\n  let [commentAuthor, setCommentAuthor] = useState([]);\n  let [commentContent, setCommentContent] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8000/apip/posts/512`).then(response => response.json()).then(data => {\n      setNote(data.note);\n      setMeetingType(data.meetingType);\n      setMentoringType(data.mentoringType);\n      setExperience(data.experience);\n      setFirstName(data.firstName);\n      setLastName(data.lastName);\n      setJobTitle(data.jobTitle);\n      setCity(data.city);\n      setCompetences(data.competences);\n      setParcours(data.course);\n      setEmail(data.email);\n      setComment(comment = data.comments);\n      comment.map(({\n        firstName,\n        content\n      }) => {\n        setCommentAuthor(commentAuthor => [...commentAuthor, firstName]);\n        setCommentContent(commentContent => [...commentContent, content]);\n      });\n      console.log(id);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(ProfileContext.Provider, {\n    value: {\n      note,\n      meetingType,\n      mentoringType,\n      experience,\n      firstName,\n      lastName,\n      jobTitle,\n      city,\n      competences,\n      parcours,\n      email,\n      commentAuthor,\n      commentContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProfileContextProvider;","map":{"version":3,"sources":["/Users/admin/Documents/Hetic/ProjectMentor/src/contexts/ProfileContext.js"],"names":["React","useState","createContext","useEffect","useContext","ProgressContext","ProfileContext","ProfileContextProvider","props","id","note","setNote","meetingType","setMeetingType","mentoringType","setMentoringType","experience","setExperience","firstName","setFirstName","lastName","setLastName","jobTitle","setJobTitle","city","setCity","competences","setCompetences","parcours","setParcours","email","setEmail","comment","setComment","commentAuthor","setCommentAuthor","commentContent","setCommentContent","fetch","then","response","json","data","course","comments","map","content","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,SAASC,eAAT,QAAgC,sBAAhC;AAEA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,EAApC;;AAEP,MAAMK,sBAAsB,GAAIC,KAAD,IAAW;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAASL,UAAU,CAACC,eAAD,CAAzB;AAEA,MAAI,CAACK,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAI,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACiC,aAAD,EAAgBC,gBAAhB,IAAoClC,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAI,CAACmC,cAAD,EAAiBC,iBAAjB,IAAsCpC,QAAQ,CAAC,EAAD,CAAlD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdmC,IAAAA,KAAK,CAAE,sCAAF,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd/B,MAAAA,OAAO,CAAC+B,IAAI,CAAChC,IAAN,CAAP;AACAG,MAAAA,cAAc,CAAC6B,IAAI,CAAC9B,WAAN,CAAd;AACAG,MAAAA,gBAAgB,CAAC2B,IAAI,CAAC5B,aAAN,CAAhB;AACAG,MAAAA,aAAa,CAACyB,IAAI,CAAC1B,UAAN,CAAb;AACAG,MAAAA,YAAY,CAACuB,IAAI,CAACxB,SAAN,CAAZ;AACAG,MAAAA,WAAW,CAACqB,IAAI,CAACtB,QAAN,CAAX;AACAG,MAAAA,WAAW,CAACmB,IAAI,CAACpB,QAAN,CAAX;AACAG,MAAAA,OAAO,CAACiB,IAAI,CAAClB,IAAN,CAAP;AACAG,MAAAA,cAAc,CAACe,IAAI,CAAChB,WAAN,CAAd;AACAG,MAAAA,WAAW,CAACa,IAAI,CAACC,MAAN,CAAX;AACAZ,MAAAA,QAAQ,CAACW,IAAI,CAACZ,KAAN,CAAR;AACAG,MAAAA,UAAU,CAAED,OAAO,GAAGU,IAAI,CAACE,QAAjB,CAAV;AACAZ,MAAAA,OAAO,CAACa,GAAR,CAAY,CAAC;AAAE3B,QAAAA,SAAF;AAAa4B,QAAAA;AAAb,OAAD,KAA4B;AACtCX,QAAAA,gBAAgB,CAAED,aAAD,IAAmB,CAAC,GAAGA,aAAJ,EAAmBhB,SAAnB,CAApB,CAAhB;AACAmB,QAAAA,iBAAiB,CAAED,cAAD,IAAoB,CAAC,GAAGA,cAAJ,EAAoBU,OAApB,CAArB,CAAjB;AACD,OAHD;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYvC,EAAZ;AACD,KApBH;AAqBD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IADK;AAELE,MAAAA,WAFK;AAGLE,MAAAA,aAHK;AAILE,MAAAA,UAJK;AAKLE,MAAAA,SALK;AAMLE,MAAAA,QANK;AAOLE,MAAAA,QAPK;AAQLE,MAAAA,IARK;AASLE,MAAAA,WATK;AAULE,MAAAA,QAVK;AAWLE,MAAAA,KAXK;AAYLI,MAAAA,aAZK;AAaLE,MAAAA;AAbK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBG5B,KAAK,CAACyC,QAjBT,CADF;AAqBD,CA/DD;;AAgEA,eAAe1C,sBAAf","sourcesContent":["import React, { useState, createContext, useEffect, useContext } from \"react\";\nimport { ProgressContext } from \"./ProgressContext.js\";\n\nexport const ProfileContext = createContext();\n\nconst ProfileContextProvider = (props) => {\n  const { id } = useContext(ProgressContext);\n\n  let [note, setNote] = useState(\"\");\n  let [meetingType, setMeetingType] = useState(\"\");\n  let [mentoringType, setMentoringType] = useState(\"\");\n  let [experience, setExperience] = useState(\"\");\n  let [firstName, setFirstName] = useState(\"\");\n  let [lastName, setLastName] = useState(\"\");\n  let [jobTitle, setJobTitle] = useState(\"\");\n  let [city, setCity] = useState(\"\");\n  let [competences, setCompetences] = useState([]);\n  let [parcours, setParcours] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [comment, setComment] = useState([]);\n  let [commentAuthor, setCommentAuthor] = useState([]);\n  let [commentContent, setCommentContent] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/apip/posts/512`)\n      .then((response) => response.json())\n      .then((data) => {\n        setNote(data.note);\n        setMeetingType(data.meetingType);\n        setMentoringType(data.mentoringType);\n        setExperience(data.experience);\n        setFirstName(data.firstName);\n        setLastName(data.lastName);\n        setJobTitle(data.jobTitle);\n        setCity(data.city);\n        setCompetences(data.competences);\n        setParcours(data.course);\n        setEmail(data.email);\n        setComment((comment = data.comments));\n        comment.map(({ firstName, content }) => {\n          setCommentAuthor((commentAuthor) => [...commentAuthor, firstName]);\n          setCommentContent((commentContent) => [...commentContent, content]);\n        });\n        console.log(id);\n      });\n  }, []);\n\n  return (\n    <ProfileContext.Provider\n      value={{\n        note,\n        meetingType,\n        mentoringType,\n        experience,\n        firstName,\n        lastName,\n        jobTitle,\n        city,\n        competences,\n        parcours,\n        email,\n        commentAuthor,\n        commentContent,\n      }}\n    >\n      {props.children}\n    </ProfileContext.Provider>\n  );\n};\nexport default ProfileContextProvider;\n"]},"metadata":{},"sourceType":"module"}